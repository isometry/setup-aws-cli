{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["'use strict'\n\nimport * as core from '@actions/core';\nimport { exec } from '@actions/exec';\nimport * as tc from '@actions/tool-cache';\nimport { Octokit } from '@octokit/rest';\nimport * as fs from 'fs';\nimport * as os from 'os';\nimport * as path from 'path';\n\nconst semver = require('semver');\nconst github = new Octokit();\n\nif (require.main === module) {\n    main().catch(err => {\n        console.error(err.stack);\n        process.exit(1);\n    });\n}\n\nasync function main(): Promise<void> {\n    try {\n        const tool = 'aws-cli';\n        let version = core.getInput('version').replace(/^v/, '') || 'latest';\n\n        if (version === 'latest') {\n            const tags = await github.repos.listTags({\n                owner: 'aws',\n                repo: tool,\n                per_page: 5,\n            });\n\n            const matchingTags = tags.data\n                .map(tag => tag.name)\n                .filter(tag => semver.satisfies(tag, '^v2'))\n\n            if (matchingTags.length === 0) {\n                throw new Error('Failed to resolve latest version');\n            }\n\n            version = matchingTags.sort(semver.rcompare)[0];\n\n            core.info(`Resolved latest version: ${version}`);\n        }\n\n        let cachePath = tc.find(tool, version);\n\n        if (!cachePath) {\n            const platform = os.platform();\n            if (platform !== 'linux') {\n                throw new Error(`Unsupported platform: ${platform}`);\n            }\n            const arch = os.arch();\n            let zipArch: string;\n            switch (arch) {\n                case 'arm64':\n                    zipArch = 'aarch64'\n                    break;\n                case 'x64':\n                    zipArch = 'x86_64'\n                    break;\n                default:\n                    throw new Error(`Unsupported architecture: ${arch}`);\n            }\n\n            const toolUrl = `https://awscli.amazonaws.com/awscli-exe-linux-${zipArch}-${version}.zip`;\n\n            core.info(`Downloading from ${toolUrl}`);\n            const toolArchive = await tc.downloadTool(toolUrl);\n            core.info(`Extracting zip archive: ${toolArchive}`);\n            const extractPath = await tc.extractZip(toolArchive);\n\n            // The installer creates absolute path symlinks to the the install directory\n            // so install where we expect to be called from\n            const runnerToolCachePath = process.env.RUNNER_TOOL_CACHE || '';\n            if (!runnerToolCachePath) {\n                throw new Error('Environment variable RUNNER_TOOL_CACHE not set');\n            }\n            cachePath = path.join(runnerToolCachePath, tool, version, arch);\n\n            await exec(path.join(extractPath, 'aws/install'), ['--install-dir', cachePath, '--bin-dir', path.join(cachePath, 'bin')]);\n\n            const markerPath = `${cachePath}.complete`;\n            fs.writeFileSync(markerPath, '');\n        }\n\n        const binDir = path.join(cachePath, 'bin');\n\n        core.addPath(binDir);\n        core.setOutput('version', version);\n        core.info(`Installed ${tool} version ${version}`);\n    } catch (err) {\n        core.setFailed(`Action failed with error ${err} `);\n    }\n}\n"]}